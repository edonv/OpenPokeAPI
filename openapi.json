{
  "openapi": "3.1.0",
  "info": {
    "version": "2",
    "title": "PokéAPI",
    "description": "A Pokémon API."
  },
  "externalDocs": {
    "url": "https://pokeapi.co/docs/v2"
  },
  "servers": [
    {
      "url": "https://pokeapi.co/api/v2",
      "description": "Base URL for the API."
    }
  ],
  "paths": {
    "/{endpoint}": {
      "description": "Calling any API endpoint without a resource ID or name will return a paginated list of available resources for that API. By default, a list \"page\" will contain up to 20 resources. If you would like to change this just add the `limit` query parameter to the request. You can use `offset` to move to the next page or skip resources.",
      "parameters": [
        {
          "in": "path",
          "name": "endpoint",
          "schema": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "required": true
        },
        {
          "in": "query",
          "name": "limit",
          "schema": {
            "type": "integer"
          },
          "required": false,
          "description": "The maximum number of resources to return per request \"page\". The default is `20`."
        },
        {
          "in": "query",
          "name": "offset",
          "schema": {
            "type": "integer"
          },
          "required": false,
          "description": "The number of resources to skip before listing resources. The default is `20`."
        }
      ],
      "get": {
        "operationId": "getEndpointList",
        "tags": ["Resource Lists/Pagination"],
        "responses": {
          "200": {
            "description": "A list of resource items.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamedAPIResourceList"
                }
              }
            }
          }
        }
      }
    },
    "/berry/{nameOrId}": {
      "description": "Berries are small fruits that can provide HP and status condition restoration, stat enhancement, and even damage negation when eaten by Pokémon. Check out [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Berry) for greater detail.",
      "parameters": [
        {
          "$ref": "#/components/parameters/nameOrId"
        }
      ],
      "get": {
        "operationId": "getBerry",
        "tags": ["Berries"],
        "responses": {
          "200": {
            "description": "A Berry object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Berry"
                }
              }
            },
            "links": {
              "GetBerryFirmnessByName": {
                "operationId": "getBerryFirmness",
                "parameters": {
                  "itemNameOrId": "$response.body#/firmness.name"
                },
                "description": "The `name` field of the `firmness` value returned in the response can be used as the `nameOrId` parameter in `GET /berry-firmness/{nameOrId}`."
              },
              "GetBerryItemByName": {
                "operationId": "getItem",
                "parameters": {
                  "itemNameOrId": "$response.body#/item.name"
                },
                "description": "The `name` field of the `item` value returned in the response can be used as the `nameOrId` parameter in `GET /item/{nameOrId}`."
              },
              "GetTypeByName": {
                "operationId": "getType",
                "parameters": {
                  "typeNameOrId": "$response.body#/natural_gift_type.name"
                },
                "description": "The `name` field of the `natural_gift_type` value returned in the response can be used as the `nameOrId` parameter in `GET /type/{nameOrId}`."
              }
            }
          }
        }
      }
    },
    "/berry-firmness/{nameOrId}": {
      "description": "Berries can be soft or hard. Check out [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Category:Berries_by_firmness) for greater detail.",
      "parameters": [
        {
          "$ref": "#/components/parameters/nameOrId"
        }
      ],
      "get": {
        "operationId": "getBerryFirmness",
        "tags": ["Berries"],
        "responses": {
          "200": {
            "description": "A BerryFirmness object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BerryFirmness"
                }
              }
            },
            "links": {
              "GetBerryByName": {
                "operationId": "getBerry",
                "parameters": {
                  "itemNameOrId": "$response.body#/berries.name"
                },
                "description": "The `name` field of the `berries` value returned in the response can be used as the `nameOrId` parameter in `GET /berry/{nameOrId}`."
              }
            }
          }
        }
      }
    },
    "/item/{nameOrId}": {
      "get": {
        "operationId": "getItemByNameOrId"
      }
    }
  },
  "components": {
    "parameters": {
      "nameOrId": {
        "name": "nameOrId",
        "in": "path",
        "required": true,
        "description": "The name or unique ID to get.",
        "schema": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/ResourceId"
            },
            {
              "$ref": "#/components/schemas/ResourceName"
            }
          ]
        }
      }
    },
    "schemas": {
      "ResourceId": {
        "type": "integer",
        "description": "The identifier for this resource."
      },
      "ResourceName": {
        "type": "string",
        "description": "The name for this resource."
      },
      "NamedAPIResource": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the referenced resource.",
            "type": "string"
          },
          "url": {
            "description": "The URL of the referenced resource.",
            "type": "string"
          }
        }
      },
      "NamedAPIResourceList": {
        "type": "object",
        "properties": {
          "count": {
            "description": "The total number of resources available from this API.",
            "type": "integer"
          },
          "next": {
            "description": "The URL for the next page in the list.",
            "type": ["string", "null"]
          },
          "previous": {
            "description": "The URL for the previous page in the list.",
            "type": ["string", "null"]
          },
          "results": {
            "description": "A list of named API resources.",
            "type": "array",
            "types": {
              "$ref": "#/components/schemas/NamedAPIResource"
            }
          }
        }
      },
      "Name": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The localized name for an API resource in a specific language."
          },
          "language": {
            "$ref": "#/components/schemas/NamedAPIResource",
            "description": "The language this name is in."
          }
        }
      },
      "Berry": {
        "$ref": "./schemas/berries.json#Berry"
      },
      "BerryFirmness": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ResourceId"
          },
          "name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "berries": {
            "description": "A list of the berries with this firmness.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NamedAPIResource"
            }
          },
          "names": {
            "description": "The name of this resource listed in different languages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          }
        }
      },
      "BerryFlavorMap": {
        "type": "object",
        "properties": {
          "potency": {
            "description": "How powerful the referenced flavor is for this berry.",
            "type": "integer"
          },
          "flavor": {
            "description": "The referenced berry flavor.",
            "$ref": "#/components/schemas/NamedAPIResource"
          }
        }
      },
      "Endpoint": {
        "type": "string",
        "enum": [
          "berry", "berry-firmness"
        ]
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Api-Key"
      }
    }
  }
}
